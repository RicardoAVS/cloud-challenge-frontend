{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/Projects/cv-front/cloud-challenge-react-front/src/components/home-page/home-page.component.tsx\",\n    _s = $RefreshSig$();\n\nimport Profile from \"../profile/profile.component\";\nimport Content from \"../content/content.component\";\nimport StatusBar from \"../status-bar/status-bar.component\";\nimport Contact from \"../contact/contact.component\";\nimport Image from \"../../assets/ProfilePic.jpg\";\nimport { PageContainer, ContentContainer, LeftContentContainer, RightContentContainer, Divider, Title } from \"./home-page.styles\";\nimport Footer from \"../footer/footer.component\";\nimport { useEffect, useState } from \"react\"; // import { fetchViewCount } from './fetch-data';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    let fetchData = async webpage => {\n      let url = \"https://gz1ost5v1h.execute-api.us-east-1.amazonaws.com/Prod\";\n      const result = await fetch(`${url}/visitors`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Website: webpage\n        })\n      }).then(result => {\n        return result.json();\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    fetchData('Cloud Challenge').then(data => {\n      console.log(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Profile, {\n      imageSrc: Image,\n      profileName: \"Ricardo Villada\",\n      profession: \"Software Developer\",\n      summary: \"Software Development student wanting  to make a cereer using AWS and Python\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LeftContentContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          title: \"Student\",\n          subTitle: \"Sena - CTMA\",\n          timeFrame: \"Oct'2019 - Present\",\n          description: `I am learning and working with a lot of new subjects and technologies\n                                                related to Software Development. Such as HTML, CSS, Javascript for FrontEnd to Java, \n                                                C# for BackEnd and Postgresql/MySQL for Data Base`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          children: \"Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n          name: \"HTML\",\n          statusBarWidth: \"80%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n          name: \"CSS\",\n          statusBarWidth: \"66%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n          name: \"JavaScript\",\n          statusBarWidth: \"60%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n          name: \"Python\",\n          statusBarWidth: \"70%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n          name: \"AWS Cloud Computing\",\n          statusBarWidth: \"39%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n          name: \"SQL\",\n          statusBarWidth: \"45%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n          name: \"English\",\n          statusBarWidth: \"64%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightContentContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          title: \"Rock-Scissor-Papper\",\n          subTitle: \"Language - Java\",\n          description: `- A side project created to fill my curiosity and get\n                                    practice. ${\"\\n\"}\n                                    - I learned Java, the importance of UML and designing before\n                                    implementing the code. ${\"\\n\"}\n                                    - The challenge included designing the communication between\n                                    Classes.`,\n          projectStatus: {\n            completed: true,\n            sourceCode: \"https://github.com/RicardoAVS/RockPaperScissor\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          title: \"AWS Serverless Hosted Resume Website\",\n          subTitle: \"Language - JavaScript/HTML/CSS and Python\",\n          description: `A project I started during Quarantine as part of a challenge called \n                                                The Cloud Resume Challenge I created a website to host my resume using\n                                                AWS Services such as S3, DynamoDB, Lambda and Route53. \n                                                I was able to put previous HTML/CSS and Javascript knowledge into practice \n                                                for the FrontEnd. As well as learning about Python, Lambda Functions \n                                                and DynamoDB for the BackEnd`,\n          projectStatus: {\n            completed: true,\n            sourceCode: \"github.com/RicardoAVS/cloud-challenge-frontend\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          title: \"Spotify API\",\n          subTitle: \"Language - Python\",\n          description: `I learned about client-server architecture, \n                                                the different types of HTTP Requests methods as well as status codes.\n                                                I used Jupyter NoteBooks as a toolkit during this project `,\n          projectStatus: {\n            completed: true,\n            sourceCode: \"github.com/RicardoAVS/spotify-api\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Contact, {\n          iconClass: \"fab fa-github fa-5x\",\n          urlLink: \"https://github.com/RicardoAVS\",\n          name: \" /RicardoAVS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Contact, {\n          iconClass: \"fab fa-linkedin fa-5x\",\n          urlLink: \"https://www.linkedin.com/in/ricardoavs\",\n          name: \" /RicardoAVS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Contact, {\n          iconClass: \"fab fa-whatsapp fa-5x\",\n          name: \" +57 3054013169\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Contact, {\n          iconClass: \"far fa-envelope fa-5x fab\",\n          name: \" ricardovillada@hotmail.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/ricardo/Projects/cv-front/cloud-challenge-react-front/src/components/home-page/home-page.component.tsx"],"names":["Profile","Content","StatusBar","Contact","Image","PageContainer","ContentContainer","LeftContentContainer","RightContentContainer","Divider","Title","Footer","useEffect","useState","HomePage","data","setData","fetchData","webpage","url","result","fetch","method","mode","headers","body","JSON","stringify","Website","then","json","catch","error","console","log","completed","sourceCode"],"mappings":"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","sourcesContent":["import Profile from \"../profile/profile.component\";\nimport Content from \"../content/content.component\";\nimport StatusBar from \"../status-bar/status-bar.component\";\nimport Contact from \"../contact/contact.component\";\nimport Image from \"../../assets/ProfilePic.jpg\";\n\nimport {\n  PageContainer,\n  ContentContainer,\n  LeftContentContainer,\n  RightContentContainer,\n  Divider,\n  Title,\n} from \"./home-page.styles\";\nimport Footer from \"../footer/footer.component\";\nimport { useEffect, useState } from \"react\";\n\n// import { fetchViewCount } from './fetch-data';\nconst HomePage = () => {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    let fetchData = async (webpage: string) => {\n      let url = \"https://gz1ost5v1h.execute-api.us-east-1.amazonaws.com/Prod\"\n      const result = await fetch(`${url}/visitors`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          Website: webpage,\n        }),\n      }\n      ).then((result) => {\n        return result.json()\n      }).catch((error) => {\n        console.log(error)\n      });\n    \n    };\n\n    fetchData('Cloud Challenge')\n    .then(data => {\n      console.log(data);\n    });\n    \n  }, []);\n\n  return (\n    <PageContainer>\n      <Profile\n        imageSrc={Image}\n        profileName=\"Ricardo Villada\"\n        profession=\"Software Developer\"\n        summary=\"Software Development student wanting \n                                    to make a cereer using AWS and Python\"\n      ></Profile>\n      <ContentContainer>\n        <LeftContentContainer>\n          <Title>Experience</Title>\n          <Content\n            title=\"Student\"\n            subTitle=\"Sena - CTMA\"\n            timeFrame=\"Oct'2019 - Present\"\n            description={`I am learning and working with a lot of new subjects and technologies\n                                                related to Software Development. Such as HTML, CSS, Javascript for FrontEnd to Java, \n                                                C# for BackEnd and Postgresql/MySQL for Data Base`}\n          ></Content>\n          <Title>Skills</Title>\n          <StatusBar name=\"HTML\" statusBarWidth=\"80%\"></StatusBar>\n          <StatusBar name=\"CSS\" statusBarWidth=\"66%\"></StatusBar>\n          <StatusBar name=\"JavaScript\" statusBarWidth=\"60%\"></StatusBar>\n          <StatusBar name=\"Python\" statusBarWidth=\"70%\"></StatusBar>\n          <StatusBar\n            name=\"AWS Cloud Computing\"\n            statusBarWidth=\"39%\"\n          ></StatusBar>\n          <StatusBar name=\"SQL\" statusBarWidth=\"45%\"></StatusBar>\n          <StatusBar name=\"English\" statusBarWidth=\"64%\"></StatusBar>\n        </LeftContentContainer>\n\n        <Divider></Divider>\n\n        <RightContentContainer>\n          <Title>Projects</Title>\n          <Content\n            title=\"Rock-Scissor-Papper\"\n            subTitle=\"Language - Java\"\n            description={`- A side project created to fill my curiosity and get\n                                    practice. ${\"\\n\"}\n                                    - I learned Java, the importance of UML and designing before\n                                    implementing the code. ${\"\\n\"}\n                                    - The challenge included designing the communication between\n                                    Classes.`}\n            projectStatus={{\n              completed: true,\n              sourceCode: \"https://github.com/RicardoAVS/RockPaperScissor\",\n            }}\n          ></Content>\n          <Content\n            title=\"AWS Serverless Hosted Resume Website\"\n            subTitle=\"Language - JavaScript/HTML/CSS and Python\"\n            description={`A project I started during Quarantine as part of a challenge called \n                                                The Cloud Resume Challenge I created a website to host my resume using\n                                                AWS Services such as S3, DynamoDB, Lambda and Route53. \n                                                I was able to put previous HTML/CSS and Javascript knowledge into practice \n                                                for the FrontEnd. As well as learning about Python, Lambda Functions \n                                                and DynamoDB for the BackEnd`}\n            projectStatus={{\n              completed: true,\n              sourceCode: \"github.com/RicardoAVS/cloud-challenge-frontend\",\n            }}\n          ></Content>\n          <Content\n            title=\"Spotify API\"\n            subTitle=\"Language - Python\"\n            description={`I learned about client-server architecture, \n                                                the different types of HTTP Requests methods as well as status codes.\n                                                I used Jupyter NoteBooks as a toolkit during this project `}\n            projectStatus={{\n              completed: true,\n              sourceCode: \"github.com/RicardoAVS/spotify-api\",\n            }}\n          ></Content>\n          <Title>Contact</Title>\n          <Contact\n            iconClass=\"fab fa-github fa-5x\"\n            urlLink=\"https://github.com/RicardoAVS\"\n            name=\" /RicardoAVS\"\n          />\n          <Contact\n            iconClass=\"fab fa-linkedin fa-5x\"\n            urlLink=\"https://www.linkedin.com/in/ricardoavs\"\n            name=\" /RicardoAVS\"\n          />\n          <Contact iconClass=\"fab fa-whatsapp fa-5x\" name=\" +57 3054013169\" />\n          <Contact\n            iconClass=\"far fa-envelope fa-5x fab\"\n            name=\" ricardovillada@hotmail.com\"\n          />\n        </RightContentContainer>\n      </ContentContainer>\n      <Footer />\n    </PageContainer>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}